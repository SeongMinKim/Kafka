spring:
  kafka:
    consumer:
      #Kafka 클러스터에 대한 초기 연결에 사용할 호스트
      bootstrap-servers: localhost:9092

      # Consumer는 Consumer Group이 존재하기 때문에, 유일하게 식별 가능한 Group 작성
      group-id: foo

      #kafka 서버에 초기 offset이 없거나, 현재 offset이 더이상 없는 경우 수행할 작업을 작성합니다.
      #컨슈머가 메시지를 어디까지 가져왔는지 표시하는 것
      #예를들어 코드 배포로 인해 컨슈머가 일시적으로 동작을 멈추고 재시작 하는 경우
      #기존 컨슈머의 역할을 대신 하는 경우 카프카가 죽어서
      #카프카에서 메시지의 위치를 나타내는 위치를 오프셋
      #숫자로 나타냄
      #읽어온 위치의 오프셋 정보를 _consumer_offsets 에 기록
      auto-offset-reset: earliest

      #kafka 에서 데이터를 받아올때, key / value를 역직렬화 합니다.
      #메시지가 문자열 데이터 이므로
      #JsonDeserializer 도가능하다
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    #메시지 발행
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

#Bean 을 통해 설정하는 방법도 있다.